<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.2.RELEASE</version>
    </parent>
    <groupId>com.github.slfotg</groupId>
    <artifactId>giphy-search-app</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>
    <description>Giphy API Demo Project</description>

    <properties>
        <java.version>1.8</java.version>
        <docker.maven.plugin.fabric8.version>0.28.0</docker.maven.plugin.fabric8.version>
        <jacoco.version>0.8.3</jacoco.version>

        <spring.test.dbunit.version>1.3.0</spring.test.dbunit.version>
        <dbunit.version>2.6.0</dbunit.version>

        <docker.mysql.rootPassword>rootPassword</docker.mysql.rootPassword>
        <docker.mysql.database>giphy_db</docker.mysql.database>
        <docker.mysql.user>giphy_user</docker.mysql.user>
        <docker.mysql.password>giphyPassword</docker.mysql.password>
        <docker.mysql.url>jdbc:mysql://db:3306/${docker.mysql.database}?verifyServerCertificate=false&amp;useSSL=true</docker.mysql.url>
        <docker.db.alias>db</docker.db.alias>
        <docker.rest.alias>rest</docker.rest.alias>
        <docker.web.alias>web</docker.web.alias>
    </properties>

    <modules>
        <module>giphy-search-web</module>
        <module>giphy-search-persistence</module>
        <module>giphy-search-rest-api</module>
        <module>giphy-search-db</module>
    </modules>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>giphy-search-persistence</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>giphy-search-rest-api</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>org.webjars</groupId>
                <artifactId>bootstrap</artifactId>
                <version>4.2.1</version>
            </dependency>

            <dependency>
                <groupId>org.webjars</groupId>
                <artifactId>jquery</artifactId>
                <version>3.0.0</version>
            </dependency>

            <dependency>
                <groupId>org.webjars</groupId>
                <artifactId>angularjs</artifactId>
                <version>1.7.6</version>
            </dependency>

            <dependency>
                <groupId>org.webjars</groupId>
                <artifactId>font-awesome</artifactId>
                <version>5.7.1</version>
            </dependency>

            <dependency>
                <groupId>org.webjars</groupId>
                <artifactId>startbootstrap-sb-admin-2</artifactId>
                <version>3.3.7+1</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-netflix-zuul</artifactId>
                <version>2.1.0.RELEASE</version>
            </dependency>

            <dependency>
                <groupId>com.github.springtestdbunit</groupId>
                <artifactId>spring-test-dbunit</artifactId>
                <version>${spring.test.dbunit.version}</version>
            </dependency>
            <dependency>
                <groupId>org.dbunit</groupId>
                <artifactId>dbunit</artifactId>
                <version>${dbunit.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>${docker.maven.plugin.fabric8.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
            </plugin>

            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <showWarnings>true</showWarnings>
                    <compilerArgs>
                        <arg>-Xlint:all</arg>
                        <arg>-Xlint:-processing</arg>
                    </compilerArgs>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.owasp</groupId>
                <artifactId>dependency-check-maven</artifactId>
                <configuration>
                    <format>HTML</format>
                    <outputDirectory>${dependency.check.report.dir}</outputDirectory>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                            <goal>aggregate</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <executions>
                    <execution>
                        <id>default-prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <configuration>
                    <images>
                        <image>
                            <alias>${docker.db.alias}</alias>
                            <name>slfotg/giphy-search-db:${project.version}</name>
                            <run>
                                <env>
                                    <MYSQL_ROOT_PASSWORD>${docker.mysql.rootPassword}</MYSQL_ROOT_PASSWORD>
                                    <MYSQL_DATABASE>${docker.mysql.database}</MYSQL_DATABASE>
                                    <MYSQL_USER>${docker.mysql.user}</MYSQL_USER>
                                    <MYSQL_PASSWORD>${docker.mysql.password}</MYSQL_PASSWORD>
                                </env>
                                <ports>
                                    <port>13306:3306</port>
                                </ports>
                                <wait>
                                    <log>socket: '/var/run/mysqld/mysqld.sock'.*port: 3306</log>
                                    <time>300000</time>
                                </wait>
                                <log>
                                    <prefix>MySQL</prefix>
                                    <color>yellow</color>
                                </log>
                            </run>
                        </image>

                        <image>
                            <alias>${docker.rest.alias}</alias>
                            <name>slfotg/giphy-search-rest-api:${project.version}</name>

                            <run>
                                <env>
                                    <GIPHY_API_KEY>${env.GIPHY_API_KEY}</GIPHY_API_KEY>
                                </env>
                                <ports>
                                    <port>18081:8080</port>
                                    <port>18001:8000</port>
                                </ports>
                                <wait>
                                    <url>http://${docker.host.address}:18081/api/</url>
                                    <time>60000</time>
                                </wait>
                                <links>
                                    <link>${docker.db.alias}:${docker.db.alias}</link>
                                </links>
                                <log>
                                    <prefix>REST</prefix>
                                    <color>green</color>
                                </log>
                            </run>
                        </image>

                        <image>
                            <alias>${docker.web.alias}</alias>
                            <name>slfotg/giphy-search-web:${project.version}</name>

                            <run>
                                <env>
                                    <GIPHY_DATASOURCE_URL>${docker.mysql.url}</GIPHY_DATASOURCE_URL>
                                    <GIPHY_DATASOURCE_USERNAME>${docker.mysql.user}</GIPHY_DATASOURCE_USERNAME>
                                    <GIPHY_DATASOURCE_PASSWORD>${docker.mysql.password}</GIPHY_DATASOURCE_PASSWORD>
                                    <SPRING_PROFILES_ACTIVE>docker</SPRING_PROFILES_ACTIVE>
                                    <GIPHY_REST_HOST>${docker.rest.alias}</GIPHY_REST_HOST>
                                    <GIPHY_REST_PORT>8080</GIPHY_REST_PORT>
                                </env>
                                <ports>
                                    <port>18080:8080</port>
                                    <port>18000:8000</port>
                                </ports>
                                <links>
                                    <link>${docker.db.alias}:${docker.db.alias}</link>
                                    <link>${docker.rest.alias}:${docker.rest.alias}</link>
                                </links>
                                <log>
                                    <prefix>WEB</prefix>
                                    <color>cyan</color>
                                </log>
                            </run>
                        </image>
                    </images>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
